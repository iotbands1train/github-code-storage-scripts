AWSTemplateFormatVersion: '2010-09-09'
Description: General AWS CloudFormation template to provision an EC2 instance inside a VPC with configurable parameters

Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.large
    AllowedValues: [t2.micro, t2.small, t2.medium, t3.micro, t3.small, t3.medium, t3.large]
    ConstraintDescription: Must be a valid EC2 instance type.
  
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

  AMIId:
    Description: AMI ID for the instance
    Type: AWS::EC2::Image::Id
    Default: ami-0b458348c96fbed11

  SecurityGroupDescription:
    Description: Description of the security group
    Type: String
    Default: Allow SSH and HTTP access

  VolumeSize:
    Description: Size of the EBS volume (in GiB)
    Type: Number
    Default: 30
    MinValue: 8
    MaxValue: 1024

  VolumeType:
    Description: Type of the EBS volume
    Type: String
    Default: gp3
    AllowedValues: [gp2, gp3, io1, io2, sc1, st1, standard]
    ConstraintDescription: Must be a valid EBS volume type.

  IOPS:
    Description: The IOPS for the EBS volume (only applicable for certain volume types)
    Type: Number
    Default: 3000
    MinValue: 100
    MaxValue: 64000

  PublicIP:
    Description: Assign a public IP address to the instance
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']

  InstanceProfile:
    Description: The name of an existing IAM instance profile to associate with the instance
    Type: String
    Default: ''

  TerminationProtection:
    Description: Enable termination protection for the instance
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']

  Monitoring:
    Description: Enable detailed monitoring for the instance
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: MyInternetGateway

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs !Ref AWS::Region]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet

  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  Route:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Ref SecurityGroupDescription
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties: 
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: !Ref AMIId
      NetworkInterfaces:
        - AssociatePublicIpAddress: !Ref PublicIP
          DeviceIndex: 0
          SubnetId: !Ref PublicSubnet
          GroupSet: [!Ref SecurityGroup]
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !Ref VolumeSize
            VolumeType: !Ref VolumeType
            Iops: !Ref IOPS
      IamInstanceProfile: !If 
        - !Equals [!Ref InstanceProfile, '']
        - Ref: InstanceProfile
        - Ref: AWS::NoValue
      DisableApiTermination: !Ref TerminationProtection
      Monitoring: !Ref Monitoring

Outputs:
  InstanceId:
    Description: The Instance ID of the EC2 instance
    Value: !Ref EC2Instance
  PublicIP:
    Description: The public IP address of the EC2 instance (if applicable)
    Value: !GetAtt EC2Instance.PublicIp
  PrivateIP:
    Description: The private IP address of the EC2 instance
    Value: !GetAtt EC2Instance.PrivateIp
  InstanceType:
    Description: The type of the EC2 instance
    Value: !Ref InstanceType
  KeyName:
    Description: The key pair name used for the instance
    Value: !Ref KeyName
  AMIId:
    Description: The AMI ID used for the instance
    Value: !Ref AMIId
  SecurityGroupIds:
    Description: The security group IDs associated with the instance
    Value: !Ref SecurityGroup
  VolumeSize:
    Description: The size of the EBS volume attached to the instance
    Value: !Ref VolumeSize
  VolumeType:
    Description: The type of the EBS volume attached to the instance
    Value: !Ref VolumeType
  IOPS:
    Description: The IOPS of the EBS volume attached to the instance
    Value: !Ref IOPS
  VPCId:
    Description: The VPC ID where the instance is launched
    Value: !Ref VPC
  SubnetId:
    Description: The subnet ID where the instance is launched
    Value: !Ref PublicSubnet
  InternetGatewayId:
    Description: The Internet Gateway ID associated with the VPC
    Value: !Ref InternetGateway
  RouteTableId:
    Description: The Route Table ID associated with the VPC
    Value: !Ref RouteTable
